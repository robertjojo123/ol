local json = require("json") -- JSON library for saving/loading progress

-- ‚úÖ Define the base URL and number of files to process
local baseUrl = "https://raw.githubusercontent.com/robertjojo123/olympus2/refs/heads/main/output_"
local totalFiles = 122 -- Total block data files

-- ‚úÖ Position Tracking
local pos = {x = 0, y = 0, z = 0, dir = 0} -- Turtle's absolute position
local lastPlacedIndex = 1 -- Tracks last placed block
local referencePoint = nil -- Build start reference

-- ‚úÖ Function to Wait for a File Before Continuing
local function waitForFile(fileName)
    print("üìÇ Waiting for file:", fileName)
    while not fs.exists(fileName) do sleep(1) end
    print("‚úÖ File detected:", fileName)
end

-- ‚úÖ Function to Download and Process Block Data Sequentially
local function downloadBlockData()
    for i = 1, totalFiles do
        local fileName = "output.lua"
        local fileUrl = baseUrl .. i .. ".lua"

        -- ‚úÖ Delete previous `output.lua` before downloading the next one
        if fs.exists(fileName) then
            fs.delete(fileName)
        end

        print("üì• Downloading block data: " .. fileUrl)
        shell.run("wget " .. fileUrl .. " " .. fileName)

        -- ‚úÖ Ensure the file was successfully downloaded
        if fs.exists(fileName) then
            print("‚úÖ Block data saved as " .. fileName)
        else
            print("‚ùå ERROR: Failed to download " .. fileUrl)
            return
        end

        -- ‚úÖ Wait for the file to be properly saved before starting the build
        waitForFile(fileName)

        -- ‚úÖ Start building with the downloaded file
        startBuilding(fileName)
    end

    print("üéâ All block data files processed! Build complete.")
end

-- ‚úÖ Function to Start the Build Process
local function startBuilding(fileName)
    loadReferencePoint()

    if not referencePoint then
        moveTo({x = pos.x, y = pos.y, z = pos.z + 3})
        saveReferencePoint()
    end

    print("üèóÔ∏è Starting build process with " .. fileName)
    buildSchematic(fileName)
end

-- ‚úÖ Function to Load Reference Point
local function loadReferencePoint()
    if fs.exists("reference.json") then
        local file = fs.open("reference.json", "r")
        referencePoint = json.decode(file.readAll())
        file.close()
    end
end

-- ‚úÖ Function to Save Reference Point
local function saveReferencePoint()
    local file = fs.open("reference.json", "w")
    file.write(json.encode(pos))
    file.close()
end

-- ‚úÖ Start the Block Data Download and Building Process
downloadBlockData()
