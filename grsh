-- ✅ Function Declarations
local waitForFile, loadBlockData, startBuild, buildSchematic, moveTo, saveProgress, refuelTurtle, restock, placeBlock

-- ✅ Position Tracking (Default Start Position)
local pos = {x = -5, y = 0, z = 0, dir = 0}
local lastPlacedIndex = 1

-- ✅ Debugging: Show that the script has started
print("🚀 Worker Turtle Booting Up...")

-- ✅ Function: Check if `output.lua` Exists
local function checkForOutputFile()
    local attempts = 0
    while not fs.exists("output.lua") do
        print("⏳ Waiting for `output.lua`...")
        sleep(1)
        attempts = attempts + 1
        if attempts > 30 then
            print("❌ ERROR: `output.lua` not found after 30 seconds. Shutting down.")
            os.shutdown()
        end
    end
    print("✅ `output.lua` Detected!")
end

-- ✅ Function: Load Block Data
loadBlockData = function()
    checkForOutputFile()
    print("📥 Loading `output.lua`...")
    local chunk = loadfile("output.lua")
    if chunk then
        local success, data = pcall(chunk)
        if success and type(data) == "table" then
            print("✅ Block data loaded successfully!")
            return data
        end
    end
    print("❌ ERROR: Could not load output.lua")
    return nil
end

-- ✅ Save Progress
saveProgress = function()
    local file = fs.open("progress.json", "w")
    file.write(textutils.serialize({ lastPlacedIndex = lastPlacedIndex }))
    file.close()
    print("💾 Progress Saved!")
end

-- ✅ Move to Target Position
moveTo = function(target)
    if not target then return end
    print("🚶 Moving to X=" .. target.x .. " Y=" .. target.y .. " Z=" .. target.z)

    while pos.x ~= target.x do
        if pos.x < target.x then turtle.turnRight() else turtle.turnLeft() end
        if turtle.forward() then
            pos.x = pos.x + (pos.dir == 1 and 1 or -1)
        else
            print("⛔ Blocked! Can't move forward.")
            return false
        end
    end

    while pos.z ~= target.z do
        if pos.z < target.z then turtle.turnLeft() else turtle.turnRight() end
        if turtle.forward() then
            pos.z = pos.z + (pos.dir == 0 and 1 or -1)
        else
            print("⛔ Blocked! Can't move forward.")
            return false
        end
    end

    while pos.y < target.y do
        if turtle.up() then pos.y = pos.y + 1 else print("⛔ Blocked! Can't go up.") return false end
    end
    while pos.y > target.y do
        if turtle.down() then pos.y = pos.y - 1 else print("⛔ Blocked! Can't go down.") return false end
    end

    print("✅ Arrived at destination.")
    return true
end

-- ✅ Restock Blocks from Material Chests
restock = function(block)
    local blockID = "minecraft:" .. block
    local chests = {
        {x = -9, y = 0, z = -4, dir = 2},
        {x = -9, y = 1, z = -4, dir = 2}
    }

    print("🔄 Restocking " .. blockID .. "...")

    for _, chest in ipairs(chests) do
        if moveTo(chest) then
            turtle.turnLeft()
            if turtle.suck(64) then 
                print("✅ Restocked " .. blockID .. "!")
                return true
            end
        end
    end
    print("❌ Failed to restock " .. blockID)
    return false
end

-- ✅ Place Block and Move Forward
placeBlock = function(block)
    local blockID = "minecraft:" .. block
    for i = 1, 16 do
        local item = turtle.getItemDetail(i)
        if item and item.name == blockID then
            turtle.select(i)
            if turtle.placeDown() then
                print("✅ Placed:", blockID)
                if not turtle.forward() then return false end
                return true
            end
        end
    end
    return false
end

-- ✅ Build Process
buildSchematic = function(data)
    if not data or #data == 0 then
        print("❌ ERROR: Block data is empty!")
        return
    end

    print("🛠️ Starting Build Process...")

    for i = lastPlacedIndex, #data do
        local block = data[i]
        if block and block.block then
            print("🔨 Placing:", block.block, "at", block.x, block.y, block.z)
            if moveTo({x = block.x, y = block.y, z = block.z}) then
                if placeBlock(block.block) then
                    lastPlacedIndex = i + 1
                    saveProgress()
                else
                    print("⚠️ Failed to place " .. block.block .. ", trying again.")
                    sleep(2)
                end
            else
                print("⚠️ Can't reach " .. block.x .. ", " .. block.y .. ", " .. block.z)
            end
        end
    end

    print("✅ Build complete!")
end

-- ✅ Start Build Process
startBuild = function()
    print("🚀 Starting Build Process...")
    local blockData = loadBlockData()
    if blockData then
        buildSchematic(blockData)
    else
        print("❌ ERROR: No valid block data found!")
    end

    print("🔴 Build complete. Shutting down...")
    os.shutdown()
end

-- ✅ Ensure Build Starts Automatically
startBuild()
